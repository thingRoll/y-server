<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chhd.y.dao.UserDAO">
    <resultMap id="BaseResultMap" type="com.chhd.y.pojo.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="token_uid" jdbcType="VARCHAR" property="tokenUid"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="role" jdbcType="INTEGER" property="role"/>
        <result column="tel" jdbcType="BIGINT" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="email_code" jdbcType="INTEGER" property="emailCode"/>
        <result column="email_state" jdbcType="INTEGER" property="emailState"/>
        <result column="tel_code" jdbcType="INTEGER" property="telCode"/>
        <result column="tel_state" jdbcType="INTEGER" property="telState"/>
        <result column="disable" jdbcType="INTEGER" property="disable"/>
        <result column="os" jdbcType="INTEGER" property="os"/>
        <result column="device" jdbcType="VARCHAR" property="device"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, account, username, `password`, token, token_uid, icon, `role`, tel, email, email_code, 
    email_state, tel_code, tel_state, `disable`, os, device, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.chhd.y.pojo.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, account, username, 
      `password`, token, token_uid, 
      icon, `role`, tel, email, 
      email_code, email_state, tel_code, 
      tel_state, `disable`, os, 
      device, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{tokenUid,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{tel,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, 
      #{emailCode,jdbcType=INTEGER}, #{emailState,jdbcType=INTEGER}, #{telCode,jdbcType=INTEGER}, 
      #{telState,jdbcType=INTEGER}, #{disable,jdbcType=INTEGER}, #{os,jdbcType=INTEGER}, 
      #{device,jdbcType=VARCHAR}, now(), now()
      )
  </insert>
    <insert id="insertSelective" parameterType="com.chhd.y.pojo.User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="tokenUid != null">
                token_uid,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="role != null">
                `role`,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="emailCode != null">
                email_code,
            </if>
            <if test="emailState != null">
                email_state,
            </if>
            <if test="telCode != null">
                tel_code,
            </if>
            <if test="telState != null">
                tel_state,
            </if>
            <if test="disable != null">
                `disable`,
            </if>
            <if test="os != null">
                os,
            </if>
            <if test="device != null">
                device,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="tokenUid != null">
                #{tokenUid,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=BIGINT},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="emailCode != null">
                #{emailCode,jdbcType=INTEGER},
            </if>
            <if test="emailState != null">
                #{emailState,jdbcType=INTEGER},
            </if>
            <if test="telCode != null">
                #{telCode,jdbcType=INTEGER},
            </if>
            <if test="telState != null">
                #{telState,jdbcType=INTEGER},
            </if>
            <if test="disable != null">
                #{disable,jdbcType=INTEGER},
            </if>
            <if test="os != null">
                #{os,jdbcType=INTEGER},
            </if>
            <if test="device != null">
                #{device,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chhd.y.pojo.User">
        update user
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="tokenUid != null">
                token_uid = #{tokenUid,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                `role` = #{role,jdbcType=INTEGER},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=BIGINT},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="emailCode != null">
                email_code = #{emailCode,jdbcType=INTEGER},
            </if>
            <if test="emailState != null">
                email_state = #{emailState,jdbcType=INTEGER},
            </if>
            <if test="telCode != null">
                tel_code = #{telCode,jdbcType=INTEGER},
            </if>
            <if test="telState != null">
                tel_state = #{telState,jdbcType=INTEGER},
            </if>
            <if test="disable != null">
                `disable` = #{disable,jdbcType=INTEGER},
            </if>
            <if test="os != null">
                os = #{os,jdbcType=INTEGER},
            </if>
            <if test="device != null">
                device = #{device,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chhd.y.pojo.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      token_uid = #{tokenUid,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=INTEGER},
      tel = #{tel,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      email_code = #{emailCode,jdbcType=INTEGER},
      email_state = #{emailState,jdbcType=INTEGER},
      tel_code = #{telCode,jdbcType=INTEGER},
      tel_state = #{telState,jdbcType=INTEGER},
      `disable` = #{disable,jdbcType=INTEGER},
      os = #{os,jdbcType=INTEGER},
      device = #{device,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!-- 自定义方法 -->
    <select id="selectByLogin" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username}
        AND password = #{password}
    </select>
    <select id="selectByToken" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE token = #{token}
    </select>
    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username}
    </select>
    <select id="selectByEmail" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE email = #{email}
    </select>
</mapper>